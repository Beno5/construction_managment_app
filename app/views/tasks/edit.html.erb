<%= render 'partials/header1', 
           title: @task.persisted? ? "Edit #{@task.description}" : "New Task",
           model_name: "Tasks",
           search_path: nil,
           new_path: nil,
           additional_crumbs: [
             { name: "Projects", path: business_projects_path(@current_business) },
             { name: @project.name, path: business_project_path(@current_business, @project) },
             (@task.persisted? ? { name: @task.description, path: business_project_task_path(@current_business, @project, @task) } : { name: "New Task", path: nil })
           ] %>
<%= form_with(model: [@current_business, @project, @task], local: true, data: { turbo: true }) do |f| %>
  <div class="text-sm font-medium text-center text-gray-500 border-b border-gray-200 dark:text-gray-400 dark:border-gray-700">
    <ul class="flex flex-wrap -mb-px" id="tabs">
      <li class="me-2">
        <a href="#" class="inline-block p-4 border-b-2 border-blue-600 text-blue-600 rounded-t-lg active dark:text-blue-500 dark:border-blue-500"
           data-tab="planned">Planirano</a>
      </li>
      <li class="me-2">
        <a href="#" class="inline-block p-4 border-b-2 border-transparent rounded-t-lg hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300"
           data-tab="real">Realno</a>
      </li>
      <li class="me-2">
        <a href="#" class="inline-block p-4 border-b-2 border-transparent rounded-t-lg hover:text-gray-600 hover:border-gray-300 dark:hover:text-gray-300"
           data-tab="info">Info i Komunikacija</a>
      </li>
    </ul>
  </div>
  <div class="p-4 border">
    <div id="tab-content-planned">
      <%= render 'tasks/navbar/planned', f: f %>
    </div>
    <div id="tab-content-real" class="hidden">
      <%= render 'tasks/navbar/real', f: f %>
    </div>
    <div id="tab-content-info" class="hidden">
      <%= render 'tasks/navbar/info_communication', f: f %>
    </div>
    <div class="flex items-center justify-end pt-6 border-gray-200 rounded-b dark:border-gray-700">
      <%= f.submit @task.persisted? ? "Update Task" : "Create Task", data: { turbo: false }, class: "text-white bg-primary-700 hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 font-medium rounded-lg text-sm px-5 py-2.5 text-center dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800" %>
    </div>
  </div>
<% end %>
<script>
  document.addEventListener("DOMContentLoaded", function() {
    const tabs = document.querySelectorAll("[data-tab]");
    const contents = {
      planned: document.getElementById("tab-content-planned"),
      real: document.getElementById("tab-content-real"),
      info: document.getElementById("tab-content-info"),
    };

    tabs.forEach(tab => {
      tab.addEventListener("click", function(event) {
        event.preventDefault();

        tabs.forEach(t => {
          t.classList.remove("text-blue-600", "border-blue-600", "dark:text-blue-500", "dark:border-blue-500");
          t.classList.add("border-transparent", "hover:text-gray-600", "hover:border-gray-300", "dark:hover:text-gray-300");
        });

        tab.classList.add("text-blue-600", "border-blue-600", "dark:text-blue-500", "dark:border-blue-500");
        tab.classList.remove("border-transparent", "hover:text-gray-600", "hover:border-gray-300", "dark:hover:text-gray-300");

        Object.values(contents).forEach(content => content.classList.add("hidden"));
        contents[tab.dataset.tab].classList.remove("hidden");
      });
    });
  });
</script>
